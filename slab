#! /bin/bash
# Wrapper for imfuse to generate a stack from several substacks.
# This is also known as "slabbing".
# Compare http://extreme-macro.co.uk/zerene-slabbing/

########### Adjust following variables:

# Threshold to drop unsharp areas (if not defined otherwise in Threshold[n])
Globalthreshold="75"
# Sigma value for a soft cut border (if not defined otherwise in Thresholdblur[n])
Globalthresholdblur="2"

# Final background to fill transparent area
Background="enfuse"

# Globalimfuseargs = imfuse options to generate the substacks (if not defined otherwise in Substackargs[n])
# Finalimfuseargs  = imfuse options to fuse the substack results
Optionset=1
case $Optionset in
  1)
    Globalimfuseargs="--dog=s1 --maskblur --close=r2,R2"
  ;;
esac

#Substacksplitting="auto"
Substacksplitting="manual"

case $Substacksplitting in
  auto)
    # Number of substacks ("slabs")
    Substacknumber=4
    # Shared neighbored images
    Overlap=0
  ;;
  manual)
    # Define substack sizes yourself. "1,25" means source images from first to 25th. "26,*" means from 26th to last.
    # More substacks are allowed, array must be numbered from 1 to n.
    # Overlapping is allowed, too.
    Setting="croped_ant_enfuse"
    case $Setting in
      croped_ant_enfuse)
        Substack[1]="1,25"
        Substack[2]="26,*"
        Substackargs[1]="--dog=s1 --maskblur --close=r5,R5"
        Substackargs[2]="--dog=s1 --maskblur --close=r3,R3"
        Threshold[1]="60"
        Threshold[2]="50"
      ;;
      croped_ant_finalblur)
        Substack[1]="1,25"
        Substack[2]="26,*"
        Substackargs[1]="--dog=s1 --maskblur --close=r5,R5"
        Substackargs[2]="--dog=s1 --maskblur --close=r3,R3 --finalblur=s5"
        Threshold[1]="60"
        Threshold[2]="0"
      ;;
      croped_ant_enfuse_finalblur)
        Substack[1]="1,25"
        Substack[2]="26,*"
        Substackargs[1]="--dog=s1 --maskblur --close=r5,R5"
        Substackargs[2]="--dog=s1 --maskblur --close=r3,R3 --finalblur=s5,p55"
        Threshold[1]="60"
        Threshold[2]="50"
      ;;
      bw)
        Substack[1]="1,63"
        Substack[2]="64,*"
        #Substack[3]="31,50"
        #Substack[4]="51,*"
        Threshold[1]="80"
        Threshold[2]="80"
      ;;
    esac
  ;;
esac

# Verbose terminal output (-v), show intermediate results (-V)
Verbosity="-vV"

# Show final result and substack results
Showimage="yes"

# delete cache of substacks in cache.slab
#Removesubcache="yes"
Removecache="no"

### Rather leave the Dothreshold and Dodarken at "yes" for now.
# Make unsharp areas transparent
Dothreshold="yes" # yes|no
#Dothreshold="no" # yes|no
# Use threshold mask to disregard area in following (deeper) substacks 
Dodarken="yes"  # yes|no
#Dodarken="no"  # yes|no

########## End of variables to adjust

error() {
  [ -z "${Error:-}" ] && echo "imfuse ERROR: $*
" >&2
  Error=1
  #exit 1
}
md5cut() {
  # print last 6 digits
  md5sum <<< "${1:-}" | cut -c27-32
}
note() {
  [ -z "${Error:-}" ] && echo "imfuse note: $*
" >&2
  return 0
}
printnum(){
  # print number $1 with leading zeroes.
  # $1 number
  # $2 digits. Default: 3
  printf %0${2:-3}d "${1:-0}"
}

# read image names from command line
while [ $# -gt 0 ]; do
  Sourceimagelist="$Sourceimagelist
${1:-}"
  shift
done
Sourceimagelist="$(grep .  <<< "$Sourceimagelist")"
Sourceimagelist="$(sort -V <<< "$Sourceimagelist")"
Imagenumber="$(grep -c .   <<< "$Sourceimagelist")"

# cache
Cachedir="$(pwd)/cache.slab"
mkdir -p "$Cachedir"

# background is inserted in cutout areas if Dodarken=yes
Backgroundimage="$(imfuse --showname --basename=$Cachedir/ --bg=$Background $Sourceimagelist)"
imfuse --bg=$Background --output=$Backgroundimage $Sourceimagelist || error "Error generating mean background image"

# 
Darkenmask="$Cachedir/darkenmask.tif"
magick "$(head -n1 <<< "$Sourceimagelist")" -threshold 100% -negate $Darkenmask # white mask to begin with

case $Substacksplitting in
  auto)
    # Split image list into substack source lists
    Slabsize="$((Imagenumber / Substacknumber))"
    for Slabstep in $(seq $Substacknumber); do
      Substack[$Slabstep]="$((Slabsize*(Slabstep-1) +1)),$((Slabsize*Slabstep+Overlap))"
    done
  ;;
  manual)
    for Slabstep in $(seq 100); do
      [ -z "${Substack[$Slabstep]}" ] && break
      Substack[$Slabstep]="$(sed "s/*/$Imagenumber/" <<< "${Substack[$Slabstep]}" )"
    done
    Substacknumber="$((Slabstep - 1))"
  ;;
esac
for Slabstep in $(seq $Substacknumber); do
  Slabsourcelist[$Slabstep]="$(sed -n ${Substack[$Slabstep]}p <<< "$Sourceimagelist")"
  [ -z "${Substackargs[$Slabstep]}" ]  && Substackargs[$Slabstep]="${Globalimfuseargs:-"--statistic"}"
  [ -z "${Threshold[$Slabstep]}" ]     && Threshold[$Slabstep]="${Globalthreshold:-75}"
  [ -z "${Thresholdblur[$Slabstep]}" ] && Thresholdblur[$Slabstep]="${Globalthresholdblur:-0}"
done

# Checksum for file names
Md5="$(md5cut "$Sourceimagelist $Background $Dothreshold $Dodarken ${Substack[*]} ${Substackargs[*]} ${Threshold[*]} ${Thresholdblur[*]}")"

# create substacks

for Slabstep in $(seq $Substacknumber); do
  [ "$Error" ] && break
  note "--slabs: Creating slab $Slabstep / $Substacknumber"
  
  Savemask="$Cachedir/mask$Slabstep.tif"
  
  Imfuseoptions="${Substackargs[$Slabstep]}"
  Thresholdtransparent="${Threshold[$Slabstep]}"
  Thresholddarken="${Threshold[$Slabstep]}"
  
  Imfuseoptions="$Imfuseoptions --cache=$Cachedir/_slab$Slabstep ${Slabsourcelist[$Slabstep]} --savemask=$Savemask"
  [ "$Dodarken" = "yes" ] &&                          Imfuseoptions="$Imfuseoptions --darkenmask=$Darkenmask"
  [ "$Dodarken" = "yes" ] && [ "$Slabstep" = "1" ] && Imfuseoptions="$Imfuseoptions --threshold=p${Thresholdtransparent},s${Thresholdblur[$Slabstep]} --background=transparent"
  [ "$Dothreshold" = "yes" ]                       && Imfuseoptions="$Imfuseoptions --threshold=p${Thresholdtransparent},s${Thresholdblur[$Slabstep]} --background=transparent"
  
  Image="$(imfuse --showname --basename=$Cachedir/slab$Substacknumber.$(printnum $Slabstep)_ $Imfuseoptions)" || error "--slabs: Failed to retrieve image name in step $Slabstep"
  Slabresult[$Slabstep]="$Image"
  Resultimagelist="$Image
$Resultimagelist"
  [ -e "$Image" ] || {
    imfuse $Verbosity -o $Image $Imfuseoptions || error "Error in slab step $Slabstep"
  }
  
  magick $Savemask -threshold "$Thresholddarken"% -negate $Darkenmask -compose Darken -composite $Darkenmask
#  magick $Savemask -threshold "$Thresholddarken"% -alpha off -blur 0x${Thresholdblur[$Slabstep]} -negate $Darkenmask -compose Darken -composite $Darkenmask
  #viewnior $Darkenmask &
done

[ "$Removesubcache" = "yes" ] && rm -R "$Cachedir"/_slab*
[ "$Error" ] && exit 1

# show results of substacks
echo "$Resultimagelist"
[ "$Showimage" = "yes" ] && viewnior $Resultimagelist &

#imfuse $Verbosity -o "$Image" $Imfuseoptions || error "Error in generating final image from slab results"

Image="slab_${Md5}.tif"
Command="magick $Backgroundimage"
for Slabstep in $(seq $Substacknumber); do
  Command="$Command ${Slabresult[$Slabstep]} -compose Over -composite"
done
Command="$Command $Image"

$Command

[ "$Showimage" = "yes" ] && viewnior "$Image" &

[ "$Removesubcache" = "yes" ] && rm -R "$Cachedir"/_slab*
[ "$Removecache" = "yes" ]    && rm -R "$Cachedir"
exit ${Error:-0}
